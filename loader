local Library = {}

local TweenService = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")

local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "CustomUI_Lib"
gui.ResetOnSpawn = false

-- Make Frame Draggable
local function MakeDraggable(frame)
	local dragging, dragInput, dragStart, startPos

	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = frame.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	UIS.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - dragStart
			frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
				startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)

	frame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement then
			dragInput = input
		end
	end)
end

-- Create Main Window
function Library:CreateWindow(title)
	local main = Instance.new("Frame", gui)
	main.Size = UDim2.new(0, 500, 0, 300)
	main.Position = UDim2.new(0.5, -250, 0.5, -150)
	main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	main.BorderSizePixel = 0
	main.Name = "MainWindow"
	MakeDraggable(main)

	local uicorner = Instance.new("UICorner", main)
	uicorner.CornerRadius = UDim.new(0, 8)

	local topBar = Instance.new("TextLabel", main)
	topBar.Size = UDim2.new(1, 0, 0, 40)
	topBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	topBar.Text = title or "Exploit UI"
	topBar.TextSize = 20
	topBar.Font = Enum.Font.GothamBold
	topBar.TextColor3 = Color3.fromRGB(255, 255, 255)

	local corner = Instance.new("UICorner", topBar)
	corner.CornerRadius = UDim.new(0, 8)

	local tabsFrame = Instance.new("Frame", main)
	tabsFrame.Size = UDim2.new(0, 140, 1, -40)
	tabsFrame.Position = UDim2.new(0, 0, 0, 40)
	tabsFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	Instance.new("UICorner", tabsFrame).CornerRadius = UDim.new(0, 8)

	local contentFrame = Instance.new("Frame", main)
	contentFrame.Size = UDim2.new(1, -150, 1, -50)
	contentFrame.Position = UDim2.new(0, 150, 0, 50)
	contentFrame.BackgroundTransparency = 1

	local tabList = {}
	local activeTab = nil

	function Library:CreateTab(tabName)
		local tabBtn = Instance.new("TextButton", tabsFrame)
		tabBtn.Size = UDim2.new(1, 0, 0, 30)
		tabBtn.Text = tabName
		tabBtn.Font = Enum.Font.Gotham
		tabBtn.TextSize = 14
		tabBtn.TextColor3 = Color3.new(1, 1, 1)
		tabBtn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		tabBtn.BorderSizePixel = 0
		Instance.new("UICorner", tabBtn).CornerRadius = UDim.new(0, 6)

		local tabContent = Instance.new("Frame", contentFrame)
		tabContent.Size = UDim2.new(1, 0, 1, 0)
		tabContent.BackgroundTransparency = 1
		tabContent.Visible = false

		local layout = Instance.new("UIListLayout", tabContent)
		layout.Padding = UDim.new(0, 6)
		layout.SortOrder = Enum.SortOrder.LayoutOrder

		tabBtn.MouseButton1Click:Connect(function()
			if activeTab then activeTab.Visible = false end
			tabContent.Visible = true
			activeTab = tabContent
		end)

		if not activeTab then
			tabContent.Visible = true
			activeTab = tabContent
		end

		local api = {}

		function api:AddButton(text, callback)
			local button = Instance.new("TextButton", tabContent)
			button.Size = UDim2.new(0, 300, 0, 30)
			button.Text = text
			button.Font = Enum.Font.Gotham
			button.TextSize = 14
			button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
			button.TextColor3 = Color3.fromRGB(255, 255, 255)
			Instance.new("UICorner", button).CornerRadius = UDim.new(0, 6)
			button.MouseButton1Click:Connect(function()
				pcall(callback)
			end)
		end

		-- Add more widgets like sliders, toggles, textboxes, etc. here

		return api
	end

	return Library
end

return Library
